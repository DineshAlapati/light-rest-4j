<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Light Rest 4J</title>
    <link>https://networknt.github.io/light-rest-4j/</link>
    <description>Recent content on Light Rest 4J</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 07 Jun 2017 15:07:41 -0400</lastBuildDate>
    
	<atom:link href="https://networknt.github.io/light-rest-4j/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tutorials</title>
      <link>https://networknt.github.io/light-rest-4j/tutorial/</link>
      <pubDate>Wed, 07 Jun 2017 15:07:41 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-rest-4j/tutorial/</guid>
      <description>The following tutorials are leveraging light-rest-4j framework and they will help users to get started.
 How to build, test and deploy microserivces
 How to access database in microservices
 How to register and discover services
 How to implement Chain Pattern of microservices
  </description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://networknt.github.io/light-rest-4j/</link>
      <pubDate>Tue, 06 Jun 2017 09:37:52 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-rest-4j/</guid>
      <description>Light-Java provide a plugin architecture and dozens of middleware handlers to address cross-cutting concerns in general. When you decide to build an API or service, you have to choose from different styles and corresponding framework to get started.
For API categories and frameworks, please find details here</description>
    </item>
    
    <item>
      <title>Registry and Discovery</title>
      <link>https://networknt.github.io/light-rest-4j/tutorial/discovery/</link>
      <pubDate>Fri, 27 Jan 2017 20:57:14 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-rest-4j/tutorial/discovery/</guid>
      <description>Introduction This is a tutorial to show you how to use service registry and discovery for microservices. We are going to use api_a, api_b, api_c and api_d as our examples. To simply the tutorial, I am going to disable the security all the time.
The specifications for above APIs can be found at https://github.com/networknt/swagger
Preparation In order to follow the steps below, please make sure you have the same working environment.</description>
    </item>
    
    <item>
      <title>Restful Database Access Tutorial</title>
      <link>https://networknt.github.io/light-rest-4j/tutorial/database/</link>
      <pubDate>Mon, 23 Jan 2017 09:07:32 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-rest-4j/tutorial/database/</guid>
      <description>Introduction Most microservices will have to access database in order to fulfill consumer requests. In this tutorial, we will walk through the following steps with Oracle/Postgres/Mysql for light-rest-4j framework. If you use light-graphql-4j or light-hybrid-4j the steps will be somewhat different but the concept is the same.
 How to setup database connection pool How to connect to the database instance How to do query database tables How to update database tables  Preparation In order to follow the steps below, please make sure you have the same working environment.</description>
    </item>
    
    <item>
      <title>Chain Pattern Microservices</title>
      <link>https://networknt.github.io/light-rest-4j/tutorial/ms-chain/</link>
      <pubDate>Sun, 09 Oct 2016 08:01:56 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-rest-4j/tutorial/ms-chain/</guid>
      <description>Introduction These days light weight container like Docker is getting traction, more and more API services are developed for docker container and deployed to the cloud. In this environment, traditional heavy weight containers like Java EE and Spring are losing ground as it doesn&amp;rsquo;t make sense to have a heavy weight container wrapped with a light weight docker container. Docker and container orchestration tools like Kubernetes and Docker Swarm are replacing all the functionalities Java EE provides without hogging resources.</description>
    </item>
    
    <item>
      <title>Microservices</title>
      <link>https://networknt.github.io/light-rest-4j/tutorial/microservices/</link>
      <pubDate>Sun, 09 Oct 2016 08:01:56 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-rest-4j/tutorial/microservices/</guid>
      <description>Introduction These days light weight container like Docker is getting traction, more and more API services are developed for docker container and deployed to the cloud. In this environment, traditional heavy weight containers like Java EE and Spring are losing ground as it doesn&amp;rsquo;t make sense to have a heavy weight container wrapped with a light weight docker container. Docker and container orchestration tools like Kubernetes and Docker Swarm are replacing all the functionalities Java EE provides without hogging resources.</description>
    </item>
    
  </channel>
</rss>